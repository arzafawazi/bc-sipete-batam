// node_modules/jquery-countdown/dist/jquery.countdown.min.js
!function(a) {
  "use strict";
  "function" == typeof define && define.amd ? define(["jquery"], a) : a(jQuery);
}(function(a) {
  "use strict";
  function b(a2) {
    if (a2 instanceof Date) return a2;
    if (String(a2).match(g)) return String(a2).match(/^[0-9]*$/) && (a2 = Number(a2)), String(a2).match(/\-/) && (a2 = String(a2).replace(/\-/g, "/")), new Date(a2);
    throw new Error("Couldn't cast `" + a2 + "` to a date object.");
  }
  function c(a2) {
    var b2 = a2.toString().replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1");
    return new RegExp(b2);
  }
  function d(a2) {
    return function(b2) {
      var d2 = b2.match(/%(-|!)?[A-Z]{1}(:[^;]+;)?/gi);
      if (d2) for (var f2 = 0, g2 = d2.length; f2 < g2; ++f2) {
        var h2 = d2[f2].match(/%(-|!)?([a-zA-Z]{1})(:[^;]+;)?/), j2 = c(h2[0]), k = h2[1] || "", l = h2[3] || "", m = null;
        h2 = h2[2], i.hasOwnProperty(h2) && (m = i[h2], m = Number(a2[m])), null !== m && ("!" === k && (m = e(l, m)), "" === k && m < 10 && (m = "0" + m.toString()), b2 = b2.replace(j2, m.toString()));
      }
      return b2 = b2.replace(/%%/, "%");
    };
  }
  function e(a2, b2) {
    var c2 = "s", d2 = "";
    return a2 && (a2 = a2.replace(/(:|;|\s)/gi, "").split(/\,/), 1 === a2.length ? c2 = a2[0] : (d2 = a2[0], c2 = a2[1])), Math.abs(b2) > 1 ? c2 : d2;
  }
  var f = [], g = [], h = { precision: 100, elapse: false, defer: false };
  g.push(/^[0-9]*$/.source), g.push(/([0-9]{1,2}\/){2}[0-9]{4}( [0-9]{1,2}(:[0-9]{2}){2})?/.source), g.push(/[0-9]{4}([\/\-][0-9]{1,2}){2}( [0-9]{1,2}(:[0-9]{2}){2})?/.source), g = new RegExp(g.join("|"));
  var i = { Y: "years", m: "months", n: "daysToMonth", d: "daysToWeek", w: "weeks", W: "weeksToMonth", H: "hours", M: "minutes", S: "seconds", D: "totalDays", I: "totalHours", N: "totalMinutes", T: "totalSeconds" }, j = function(b2, c2, d2) {
    this.el = b2, this.$el = a(b2), this.interval = null, this.offset = {}, this.options = a.extend({}, h), this.instanceNumber = f.length, f.push(this), this.$el.data("countdown-instance", this.instanceNumber), d2 && ("function" == typeof d2 ? (this.$el.on("update.countdown", d2), this.$el.on("stoped.countdown", d2), this.$el.on("finish.countdown", d2)) : this.options = a.extend({}, h, d2)), this.setFinalDate(c2), this.options.defer === false && this.start();
  };
  a.extend(j.prototype, { start: function() {
    null !== this.interval && clearInterval(this.interval);
    var a2 = this;
    this.update(), this.interval = setInterval(function() {
      a2.update.call(a2);
    }, this.options.precision);
  }, stop: function() {
    clearInterval(this.interval), this.interval = null, this.dispatchEvent("stoped");
  }, toggle: function() {
    this.interval ? this.stop() : this.start();
  }, pause: function() {
    this.stop();
  }, resume: function() {
    this.start();
  }, remove: function() {
    this.stop.call(this), f[this.instanceNumber] = null, delete this.$el.data().countdownInstance;
  }, setFinalDate: function(a2) {
    this.finalDate = b(a2);
  }, update: function() {
    if (0 === this.$el.closest("html").length) return void this.remove();
    var b2, c2 = void 0 !== a._data(this.el, "events"), d2 = /* @__PURE__ */ new Date();
    b2 = this.finalDate.getTime() - d2.getTime(), b2 = Math.ceil(b2 / 1e3), b2 = !this.options.elapse && b2 < 0 ? 0 : Math.abs(b2), this.totalSecsLeft !== b2 && c2 && (this.totalSecsLeft = b2, this.elapsed = d2 >= this.finalDate, this.offset = { seconds: this.totalSecsLeft % 60, minutes: Math.floor(this.totalSecsLeft / 60) % 60, hours: Math.floor(this.totalSecsLeft / 60 / 60) % 24, days: Math.floor(this.totalSecsLeft / 60 / 60 / 24) % 7, daysToWeek: Math.floor(this.totalSecsLeft / 60 / 60 / 24) % 7, daysToMonth: Math.floor(this.totalSecsLeft / 60 / 60 / 24 % 30.4368), weeks: Math.floor(this.totalSecsLeft / 60 / 60 / 24 / 7), weeksToMonth: Math.floor(this.totalSecsLeft / 60 / 60 / 24 / 7) % 4, months: Math.floor(this.totalSecsLeft / 60 / 60 / 24 / 30.4368), years: Math.abs(this.finalDate.getFullYear() - d2.getFullYear()), totalDays: Math.floor(this.totalSecsLeft / 60 / 60 / 24), totalHours: Math.floor(this.totalSecsLeft / 60 / 60), totalMinutes: Math.floor(this.totalSecsLeft / 60), totalSeconds: this.totalSecsLeft }, this.options.elapse || 0 !== this.totalSecsLeft ? this.dispatchEvent("update") : (this.stop(), this.dispatchEvent("finish")));
  }, dispatchEvent: function(b2) {
    var c2 = a.Event(b2 + ".countdown");
    c2.finalDate = this.finalDate, c2.elapsed = this.elapsed, c2.offset = a.extend({}, this.offset), c2.strftime = d(this.offset), this.$el.trigger(c2);
  } }), a.fn.countdown = function() {
    var b2 = Array.prototype.slice.call(arguments, 0);
    return this.each(function() {
      var c2 = a(this).data("countdown-instance");
      if (void 0 !== c2) {
        var d2 = f[c2], e2 = b2[0];
        j.prototype.hasOwnProperty(e2) ? d2[e2].apply(d2, b2.slice(1)) : null === String(e2).match(/^[$A-Z_][0-9A-Z_$]*$/i) ? (d2.setFinalDate.call(d2, e2), d2.start()) : a.error("Method %s does not exist on jQuery.countdown".replace(/\%s/gi, e2));
      } else new j(this, b2[0], b2[1]);
    });
  };
});
/*! Bundled license information:

jquery-countdown/dist/jquery.countdown.min.js:
  (*!
   * The Final Countdown for jQuery v2.2.0 (http://hilios.github.io/jQuery.countdown/)
   * Copyright (c) 2016 Edson Hilios
   * 
   * Permission is hereby granted, free of charge, to any person obtaining a copy of
   * this software and associated documentation files (the "Software"), to deal in
   * the Software without restriction, including without limitation the rights to
   * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   * the Software, and to permit persons to whom the Software is furnished to do so,
   * subject to the following conditions:
   * 
   * The above copyright notice and this permission notice shall be included in all
   * copies or substantial portions of the Software.
   * 
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
   * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
   * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
   * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
   * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
   *)
*/
//# sourceMappingURL=jquery-countdown_dist_jquery__countdown__min__js.js.map
